import{_ as n,o as s,c as a,a as t}from"./app-D1kaGB1U.js";const p="/assets/sw_arci_001-C6pv3mlN.png",e="/assets/ani_bg_001-CaE7wQNS.gif",c="/assets/ani_focus_001-DSSGj7bf.gif",l={},o=t('<h1 id="ui-라이브러리" tabindex="-1"><a class="header-anchor" href="#ui-라이브러리"><span>UI 라이브러리</span></a></h1><p>화려한 효과를 구현하기 위해 WebGL을 직접 사용하면 진입 장벽이 높습니다. 하지만 UI 라이브러리를 활용하면 WebGL이나 CSS 효과에 대한 전문 지식 없이도 개발이 가능합니다.</p><h2 id="s-w-architecture" tabindex="-1"><a class="header-anchor" href="#s-w-architecture"><span>S/W Architecture</span></a></h2><p><img src="'+p+`" alt="An-image"></p><p>그림| SW 구조</p><h2 id="환경-설정-하기" tabindex="-1"><a class="header-anchor" href="#환경-설정-하기"><span>환경 설정 하기</span></a></h2><h4 id="라이브러리-설치" tabindex="-1"><a class="header-anchor" href="#라이브러리-설치"><span>라이브러리 설치</span></a></h4><p>NPM 패키지로 제공되며 npm install로 라이브러리를 다운로드 받을 수 있습니다.</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>npm install vcs-sdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="라이브러리에서-제공되는-ui-효과-사용" tabindex="-1"><a class="header-anchor" href="#라이브러리에서-제공되는-ui-효과-사용"><span>라이브러리에서 제공되는 UI 효과 사용</span></a></h4><div class="custom-container warning"><p class="custom-container-title">주의</p><p>라이브러리에서 제공되는 효과는 Vue3 기반으로 제공이 되며 그 외 프레임워크에 대해서는 점차 추가 될 예정입니다.</p></div><p>라이브러리에서는 template의 html 태그를 선언하고 이벤트를 실행하는 방식으로 애니메이션을 구현할 수 있도록 가이드를 제공합니다.</p><ol><li>html 태그 선언</li></ol><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skp-background</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>options<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skp-background</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>이벤트 실행</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// VCS_SDK_BACKGROUND 효과 실행 (이미지 전환 효과)</span>
cs<span class="token punctuation">.</span><span class="token function">excuteEventListener</span><span class="token punctuation">(</span>cs<span class="token punctuation">.</span><span class="token constant">VCS_SDK_BACKGROUND</span><span class="token punctuation">,</span> imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="이미지-전환-효과" tabindex="-1"><a class="header-anchor" href="#이미지-전환-효과"><span>이미지 전환 효과</span></a></h2><p>포커스된 콘텐츠의 배경 이미지 전환 효과를 제공합니다.</p><p><img src="`+e+`" alt="An-image"></p><h4 id="example-usage" tabindex="-1"><a class="header-anchor" href="#example-usage"><span>Example Usage</span></a></h4><p>포커스를 이동하면 beforeunmount hook에서 기존 이미지에 대해 삭제해주는 이벤트가 실행 되어야 합니다. 포커스 이동 후 이미지가 변경되면, watch에서 변경 된 이미지에 대해 이벤트를 실행 시켜 주어야 합니다.</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skp-background</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skp-background</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> watch<span class="token punctuation">,</span> onBeforeUnmount <span class="token punctuation">}</span> from Vue<span class="token punctuation">;</span>
<span class="token keyword">import</span> cs <span class="token keyword">from</span> <span class="token string">&#39;vcs-sdk&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">imgSrc</span><span class="token operator">:</span> String
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">watch</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>imgSrc<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              cs<span class="token punctuation">.</span><span class="token function">excuteEventListener</span><span class="token punctuation">(</span>cs<span class="token punctuation">.</span><span class="token constant">SET_BACKGROUND</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                  src
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 포커스 이동 시, 기존 배경 이미지 삭제 이벤트 실행</span>
    cs<span class="token punctuation">.</span><span class="token function">excuteEventListener</span><span class="token punctuation">(</span>cs<span class="token punctuation">.</span><span class="token constant">REMOVE_BACKGROUND</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="포커스-애니메이션-트랜지션-효과" tabindex="-1"><a class="header-anchor" href="#포커스-애니메이션-트랜지션-효과"><span>포커스 애니메이션 &amp; 트랜지션 효과</span></a></h2><p>GNB(Global Navigation Bar) 리스트 메뉴 이동 시, 포커스 애니메이션이 동작하며 메뉴 전환 과정에서 깜빡임 없이 부드러운 전환 효과가 적용됩니다.</p><p><img src="`+c+`" alt="An-image"></p><h4 id="example-usage-1" tabindex="-1"><a class="header-anchor" href="#example-usage-1"><span>Example Usage</span></a></h4><p>skp-list 태그를 통해 리스트 메뉴를 구현 할 수 있으며, skp-list를 사용할 경우, 포커스 애니메이션과 트랜지션 효과가 자동으로 적용됩니다. 태그 선언 시 전체 리스트 데이터(list)와 이벤트를 선언해야 합니다.</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>List</td><td>리스트에 표시될 데이터</td></tr><tr><td>init</td><td>Function</td><td>리스트 초기화 시, 실행될 로직</td></tr><tr><td>click</td><td>Function</td><td>리스트 항목 클릭 시 실행될 로직</td></tr><tr><td>focus-move</td><td>Function</td><td>포커스 이동 시 실행될 로직</td></tr></tbody></table><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skp-list</span>
            <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">@init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onInit<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClick<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">@focus-move</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>focusMove<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skp-list</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> data <span class="token operator">=</span> listData<span class="token punctuation">;</span> <span class="token comment">// 리스트에 표시될 데이터</span>
    <span class="token keyword">function</span> <span class="token function">onInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 리스트 초기화 시 실행될 로직</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 리스트 항목 클릭 시 실행될 로직</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">focusMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 포커스 이동 시 실행될 로직</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),i=[o];function u(d,r){return s(),a("div",null,i)}const v=n(l,[["render",u],["__file","getting-started.html.vue"]]),m=JSON.parse('{"path":"/libUI/getting-started.html","title":"UI 라이브러리","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"S/W Architecture","slug":"s-w-architecture","link":"#s-w-architecture","children":[]},{"level":2,"title":"환경 설정 하기","slug":"환경-설정-하기","link":"#환경-설정-하기","children":[]},{"level":2,"title":"이미지 전환 효과","slug":"이미지-전환-효과","link":"#이미지-전환-효과","children":[]},{"level":2,"title":"포커스 애니메이션 & 트랜지션 효과","slug":"포커스-애니메이션-트랜지션-효과","link":"#포커스-애니메이션-트랜지션-효과","children":[]}],"git":{"updatedTime":1719779826000},"filePathRelative":"libUI/getting-started.md"}');export{v as comp,m as data};
